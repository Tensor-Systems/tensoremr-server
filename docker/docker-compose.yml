# Copyright 2021 Kidus Tiliksew

# This file is part of Tensor EMR.

# Tensor EMR is free software: you can redistribute it and/or modify
# it under the terms of the version 2 of GNU General Public License as published by
# the Free Software Foundation.

# Tensor EMR is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


version: "3.2"

services:
  postgres:
    image: debezium/postgres:14
    container_name: postgres
    restart: "always"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=emr
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    #  - ./postgres.conf:/etc/postgresql/postgresql.conf
    #  - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
    # command: postgres -c config_file=/etc/postgresql/postgresql.conf

  pgadmin:
    image: dpage/pgadmin4:6.5
    container_name: pgadmin
    restart: "always"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - postgres

  server:
    image: ghcr.io/tensor-systems/tensoremr-server:main
    ports:
      - "8080:8080"
    volumes:
      - serverfiles:/files
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=emr
      - DB_HOST=postgres
      #      DB_REPLICATION_HOST: "192.168.1.101"
      - DB_DRIVER=postgres
      - DB_PORT=5432
      - RXNORM_ADDRESS=https://rxnav.nlm.nih.gov
    depends_on:
      - postgres 

  webclient:
    image: ghcr.io/tensor-systems/tensoremr-web-client:main
    ports:
      - "4000:80"
    environment:
      NODE_ENV: "production"
      REACT_APP_SERVER_URL: http://localhost:8080
      REACT_APP_ELASTICSEARCH_URL: http://localhost:9200
    depends_on:
      - server

volumes:
  # elasticsearch:
  postgres:
  serverfiles:


  # zookeeper:
  #   image: debezium/zookeeper:latest
  #   container_name: zookeeper
  #   restart: "always"
  #   ports:
  #     - "2181:2181"
  #     - "2888:2888"
  #     - "3888:3888"

  # kafka:
  #   image: debezium/kafka:latest
  #   container_name: kafka
  #   restart: "always"
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     - ZOOKEEPER_CONNECT=zookeeper:2181
  #   depends_on:
  #     - zookeeper

  # kafkaconnect:
  #   image: us-central1-docker.pkg.dev/tensor-systems/tensor-systems-public/kafka-connect-elastic:1.0
  #   container_name: kafkaconnect
  #   restart: "always"
  #   ports:
  #     - "8083:8083"
  #   environment:
  #     - BOOTSTRAP_SERVERS=kafka:9092
  #     - GROUP_ID=1
  #     - CONFIG_STORAGE_TOPIC=my_connect_configs
  #     - OFFSET_STORAGE_TOPIC=my_connect_offsets
  #     - STATUS_STORAGE_TOPIC=my_connect_statuses
  #     # - ADVERTISED_HOST_NAME=0.0.0.0
  #     # - ADVERTISED_LISTENERS=PLAINTEXT://0.0.0.0:8083
  #   depends_on:
  #     - kafka
  #     - postgres

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
  #   container_name: elasticsearch
  #   restart: "always"
  #   volumes:
  #     - type: bind
  #       source: ./conf/elasticsearch.yml
  #       target: /usr/share/elasticsearch/config/elasticsearch.yml
  #       read_only: true
  #     - type: volume
  #       source: elasticsearch
  #       target: /usr/share/elasticsearch/data
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   environment:
  #     ES_JAVA_OPTS: "-Xmx2g -Xms2g"
  #     # Use single node discovery in order to disable production mode and avoid bootstrap checks.
  #     # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
  #     discovery.type: single-node
  #     network.publish_host: _eth0_

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.15.1
  #   container_name: kibana
  #   restart: "always"
  #   volumes:
  #     - type: bind
  #       source: ./conf/kibana.yml
  #       target: /usr/share/kibana/config/kibana.yml
  #       read_only: true
  #   ports:
  #     - "5601:5601"
  #   depends_on:
  #     - elasticsearch

  # filebeat:
  #   image: docker.elastic.co/beats/filebeat:7.15.1
  #   container_name: filebeat
  #   restart: "always"
  #   user: root
  #   volumes:
  #     - ./conf/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
  #     - /var/lib/docker:/var/lib/docker:ro
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   depends_on:
  #     - elasticsearch


# networks:
#   publisher_emr_network:
#     ipam:
#       config:
#         - subnet: 
